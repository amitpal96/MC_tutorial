Bootstrap: docker
From: ubuntu:20.04

%files
    root_v6.30.02.source.tar.gz /opt/
    pythia6/pythia6428 /opt/pythia6/
    LHAPDF-6.5.0.tar.gz /opt/
    log4cpp-1.1.5rc1.tar.gz /opt/
    libxml2-2.14.6.tar.xz /opt/
    #Generator-R-3_04_00.tar.gz /opt/
    #nuwro-<version>.tar.gz /opt/
%post

    # Set noninteractive frontend for apt
    export DEBIAN_FRONTEND=noninteractive

    # Install build tools and ROOT dependencies
    apt-get update && apt-get install -y \
        build-essential cmake gfortran git wget curl \
        python3 python3-pip python-is-python3 \
	autoconf automake libtool pkg-config \
        libgsl-dev libx11-dev libxpm-dev libxft-dev libxext-dev \
        libx11-6 libxpm4 libxft2 libxext6 \
        libtbb2 libtbb-dev \
        libxxhash0 liblz4-1 libssl1.1 \
        tzdata \
        && rm -rf /var/lib/apt/lists/*

    # Set timezone to avoid prompts
    ln -fs /usr/share/zoneinfo/Asia/Kolkata /etc/localtime
    dpkg-reconfigure --frontend noninteractive tzdata


    # Make sure the folder is named exactly as below
    cd /opt
    tar -xzf root_v6.30.02.source.tar.gz
    cd root-6.30.02
    mkdir -p build && cd build
    cmake .. \
        -DCMAKE_INSTALL_PREFIX=/opt/root \
	-DPYTHON_EXECUTABLE=$(which python3) \
        -Dpyroot=ON \
        -Droofit=ON \
        -Dbuiltin_afterimage=ON \
        -Dminuit2=ON \
        -Dgsl=ON \
        -Dfftw3=ON \
	-Dmathmore=ON \
	-Dbuiltin_gsl=OFF \
	-Dpythia6=ON \
    	-DPYTHIA6_INCLUDE_DIR=/opt/pythia6/pythia6428 \
    	-DPYTHIA6_LIBRARY=/opt/pythia6/pythia6428/libPythia6.so \
    	-Dpython3=ON \
        -Dxrootd=OFF \
        -DCMAKE_BUILD_TYPE=Release
    make -j$(nproc)
    make install

    #PYTHIA6
    #mv /opt/pythia6/pythia6428/ /opt/pythia6/
    echo "PYTHIA6 is in /opt/pythia6/pythia6428"

    # LHAPDF
    cd /opt
    #wget https://lhapdf.hepforge.org/downloads/?f=LHAPDF-6.5.0.tar.gz -O LHAPDF-6.5.0.tar.gz
    tar -xzf LHAPDF-6.5.0.tar.gz
    cd LHAPDF-6.5.0
    ./configure --prefix=/opt/lhapdf_install
    export PYTHON=python3
    make -j$(nproc)
    make install
    cd ..

    # LOG4CPP
    cd /opt
    tar -xzf log4cpp-1.1.5rc1.tar.gz
    cd log4cpp
    ./configure --prefix=/opt/log4cpp_install
    make -j$(nproc)
    make install
    cd ..

    #LIBXML2
    cd /opt
    tar -xJf libxml2-2.14.6.tar.xz
    cd libxml2-2.14.6
    ./configure --prefix=/opt/libxml2_install
    make -j$(nproc)
    make install
    cd ..

    #GENIE
    #cd /opt
    #tar -xzf Generator-R-3_04_00.tar.gz
    #mv Generator-R-3_04_00 GENIE
    #mkdir -p /opt/genie_install
    #export GENIE=/opt/GENIE
    #cd $GENIE
    #./configure --prefix=/opt/genie_install \
    #    --disable-profiler --disable-validation-tools --disable-cernlib \
    #    --enable-lhapdf6 --enable-flux-drivers --enable-geom-drivers \
    #    --disable-doxygen --enable-test --enable-mueloss --enable-dylibversion \
    #    --enable-t2k --enable-fnal --enable-atmo --enable-nucleon-decay \
    #    --enable-boosted-dark-matter --enable-dark-neutrino \
    #    --enable-nnbar-oscillation --enable-neutral-heavy-lepton \
    #    --disable-masterclass --disable-debug --with-optimiz-level=O2 \
    #    --with-pythia6-lib=/opt/pythia6/pythia6428/libPythia6.so \
    #    --with-lhapdf6-inc=/opt/lhapdf_install/include \
    #    --with-lhapdf6-lib=/opt/lhapdf_install/lib \
    #    --with-log4cpp-inc=/opt/log4cpp_install/include \
    #    --with-log4cpp-lib=/opt/log4cpp_install/lib \
    #    --with-libxml2-inc=/opt/libxml2_install/include \
    #    --with-libxml2-lib=/opt/libxml2_install/lib


    #make -j$(nproc)
    #make install

    # Extract NuWro
    #cd /opt
    #tar -xzf nuwro-<version>.tar.gz
    #mv nuwro-<version> nuwro

    # Build NuWro
    #cd nuwro

    # Make sure ROOTSYS and PYTHIA6 are set for the build
    #export ROOTSYS=/opt/root
    #export PATH=$ROOTSYS/bin:$PATH
    #export LD_LIBRARY_PATH=$ROOTSYS/lib:$LD_LIBRARY_PATH
    #export PYTHIA6=/opt/pythia6
    #export LD_LIBRARY_PATH=$PYTHIA6:$LD_LIBRARY_PATH

    # Build NuWro
    #mkdir -p build && cd build
    #cmake .. -DROOT_DIR=$ROOTSYS -DPYTHIA6_LIB=$PYTHIA6/libPythia6.so
    #make -j$(nproc)

%environment
    # ROOT environment variables
    export ROOTSYS=/opt/root
    export PATH=$ROOTSYS/bin:$PATH
    export LD_LIBRARY_PATH=$ROOTSYS/lib:$LD_LIBRARY_PATH
    export PYTHONPATH=$ROOTSYS/lib:$PYTHONPATH

    
    # PYTHIA6
    export PYTHIA6=/opt/pythia6
    export LD_LIBRARY_PATH=$PYTHIA6:$LD_LIBRARY_PATH

    # LHAPDF
    export LHAPDF=/opt/lhapdf_install
    export LHAPDF_INC=$LHAPDF/include
    export LHAPDF_LIB=$LHAPDF/lib
    export PATH=$LHAPDF/bin:$PATH
    export LD_LIBRARY_PATH=$LHAPDF_LIB:$LD_LIBRARY_PATH

    # LOG4CPP
    export LOG4CPP=/opt/log4cpp_install
    export LD_LIBRARY_PATH=$LOG4CPP/lib:$LD_LIBRARY_PATH
    export CPATH=$LOG4CPP/include:$CPATH

    # LIBXML2
    export LIBXML2_INC=/opt/libxml2_install/include/libxml2
    export LIBXML2_LIB=/opt/libxml2_install/lib
    export LD_LIBRARY_PATH=$LIBXML2_LIB:$LD_LIBRARY_PATH

    # GENIE
    #export GENIE=/opt/GENIE
    #export GENIE_INC_DIR=/opt/genie_install/include
    #export GENIE_LIB=/opt/genie_install/lib
    #export PATH=$GENIE/bin:$PATH
    #export LD_LIBRARY_PATH=$GENIE_LIB:$LD_LIBRARY_PATH

    # NuWro
    #export NUWRO=/opt/nuwro/build
    #export PATH=$NUWRO:$PATH
    #export LD_LIBRARY_PATH=$NUWRO:$LD_LIBRARY_PATH

%runscript
    
    /bin/bash